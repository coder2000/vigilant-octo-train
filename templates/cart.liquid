{% comment %}
  Dead Inside Depot - Cart Template
  Where dreams go to die... and get purchased
{% endcomment %}

<div class="cart-wrapper">
  <div class="cart-container">
    <h1 class="cart-title">Your Cart of Despair</h1>

    {% if cart.item_count > 0 %}
      <div class="cart-content">
        <div class="cart-items">
          {% for item in cart.items %}
            <div class="cart-item" data-key="{{ item.key }}">
              <div class="cart-item__media">
                {% if item.image %}
                  {{ item.image | image_url: width: 150 | image_tag: loading: 'lazy', alt: item.image.alt | escape }}
                {% endif %}
              </div>

              <div class="cart-item__details">
                <h3 class="cart-item__title">
                  <a href="{{ item.url }}">{{ item.product.title }}</a>
                </h3>

                {% unless item.product.has_only_default_variant %}
                  <div class="cart-item__variant">
                    {% for option in item.options_with_values %}
                      <span>{{ option.name }}: {{ option.value }}</span>
                    {% endfor %}
                  </div>
                {% endunless %}

                <div class="cart-item__price">
                  {% if item.original_price != item.final_price %}
                    <span class="cart-item__price-compare">{{ item.original_price | money }}</span>
                  {% endif %}
                  <span class="cart-item__price-current">{{ item.final_price | money }}</span>
                </div>
              </div>

              <div class="cart-item__quantity">
                <label for="quantity-{{ item.key }}">Quantity:</label>
                <div class="quantity-selector">
                  <button type="button" class="quantity-btn quantity-btn--minus" data-key="{{ item.key }}">-</button>
                  <input
                    type="number"
                    id="quantity-{{ item.key }}"
                    name="updates[]"
                    value="{{ item.quantity }}"
                    min="0"
                    data-key="{{ item.key }}"
                    class="quantity-input"
                  >
                  <button type="button" class="quantity-btn quantity-btn--plus" data-key="{{ item.key }}">+</button>
                </div>
              </div>

              <div class="cart-item__total">
                {{ item.final_line_price | money }}
              </div>

              <button type="button" class="cart-item__remove" data-key="{{ item.key }}">Remove</button>
            </div>
          {% endfor %}
        </div>

        <div class="cart-summary">
          <div class="cart-totals">
            <div class="cart-subtotal">
              <span>Subtotal:</span>
              <span>{{ cart.total_price | money }}</span>
            </div>

            {% if cart.total_discounts > 0 %}
              <div class="cart-discounts">
                <span>Discounts:</span>
                <span>-{{ cart.total_discounts | money }}</span>
              </div>
            {% endif %}

            <p class="cart-note">Shipping calculated at checkout</p>
          </div>

          <form action="{{ routes.cart_url }}" method="post" novalidate class="cart-form">
            <div class="cart-actions">
              <button type="submit" name="update" class="btn btn--secondary btn--full-width">Update Cart</button>
              <button type="submit" name="checkout" class="btn btn--primary btn--full-width">
                Proceed to Checkout
              </button>
            </div>
          </form>

          <div class="cart-policies">
            <p>üïØÔ∏è 30-day return policy (unlike your life choices)</p>
          </div>
        </div>
      </div>
    {% else %}
      <div class="cart-empty">
        <div class="cart-empty__content">
          <h2>Your Cart is as Empty as Your Soul</h2>
          <p>But don't worry, we have just the thing to fill that void... with scented candles.</p>
          <a href="{{ routes.all_products_collection_url }}" class="btn btn--primary"> Shop Our Despair </a>
        </div>
      </div>
    {% endif %}
  </div>
</div>

<style>
  .cart-wrapper {
    max-width: var(--page-width);
    margin: 0 auto;
    padding: 2rem;
  }

  .cart-title {
    font-family: var(--font-heading-family);
    font-size: 3rem;
    color: var(--color-text);
    text-align: center;
    margin-bottom: 3rem;
    text-transform: uppercase;
    letter-spacing: 0.2rem;
  }

  .cart-content {
    display: grid;
    grid-template-columns: 2fr 1fr;
    gap: 3rem;
  }

  .cart-items {
    display: flex;
    flex-direction: column;
    gap: 2rem;
  }

  .cart-item {
    display: grid;
    grid-template-columns: 150px 1fr auto auto auto;
    gap: 2rem;
    align-items: center;
    padding: 2rem;
    background: rgba(255, 255, 255, 0.02);
    border: 1px solid var(--color-secondary);
    border-radius: 0.5rem;
  }

  .cart-item__media img {
    width: 100%;
    height: auto;
    border-radius: 0.3rem;
  }

  .cart-item__title a {
    color: var(--color-text);
    text-decoration: none;
    font-size: 1.6rem;
    font-weight: 500;
  }

  .cart-item__title a:hover {
    color: var(--color-accent);
  }

  .cart-item__variant {
    font-size: 1.3rem;
    color: var(--color-text);
    opacity: 0.7;
    margin-top: 0.5rem;
  }

  .cart-item__price-compare {
    text-decoration: line-through;
    color: var(--color-accent);
    margin-right: 0.5rem;
  }

  .cart-item__price-current {
    color: var(--color-text);
    font-weight: bold;
  }

  .quantity-selector {
    display: flex;
    align-items: center;
    border: 1px solid var(--color-secondary);
    border-radius: 0.3rem;
    overflow: hidden;
  }

  .quantity-btn {
    background: var(--color-secondary);
    color: var(--color-text);
    border: none;
    padding: 0.8rem 1rem;
    cursor: pointer;
    transition: background-color 0.3s ease;
  }

  .quantity-btn:hover {
    background: var(--color-accent);
  }

  .quantity-input {
    background: var(--color-background);
    color: var(--color-text);
    border: none;
    padding: 0.8rem;
    width: 60px;
    text-align: center;
  }

  .cart-item__total {
    font-size: 1.6rem;
    font-weight: bold;
    color: var(--color-text);
  }

  .cart-item__remove {
    background: none;
    border: 1px solid var(--color-accent);
    color: var(--color-accent);
    padding: 0.5rem 1rem;
    border-radius: 0.3rem;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .cart-item__remove:hover {
    background: var(--color-accent);
    color: white;
  }

  .cart-summary {
    background: rgba(255, 255, 255, 0.02);
    border: 1px solid var(--color-secondary);
    border-radius: 0.5rem;
    padding: 2rem;
    height: fit-content;
    position: sticky;
    top: 2rem;
  }

  .cart-totals {
    margin-bottom: 2rem;
  }

  .cart-subtotal,
  .cart-discounts {
    display: flex;
    justify-content: space-between;
    margin-bottom: 1rem;
    font-size: 1.6rem;
    color: var(--color-text);
  }

  .cart-subtotal {
    font-weight: bold;
    font-size: 1.8rem;
    border-top: 1px solid var(--color-secondary);
    padding-top: 1rem;
  }

  .cart-note {
    font-size: 1.3rem;
    color: var(--color-text);
    opacity: 0.7;
    text-align: center;
    margin: 1rem 0;
  }

  .cart-actions {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .cart-policies {
    margin-top: 2rem;
    padding-top: 2rem;
    border-top: 1px solid var(--color-secondary);
  }

  .cart-policies p {
    font-size: 1.3rem;
    color: var(--color-text);
    opacity: 0.8;
    margin-bottom: 0.5rem;
  }

  .cart-empty {
    text-align: center;
    padding: 4rem 2rem;
  }

  .cart-empty h2 {
    font-family: var(--font-heading-family);
    font-size: 2.5rem;
    color: var(--color-text);
    margin-bottom: 1rem;
  }

  .cart-empty p {
    color: var(--color-text);
    font-size: 1.6rem;
    margin-bottom: 2rem;
    opacity: 0.8;
  }

  @media screen and (max-width: 749px) {
    .cart-content {
      grid-template-columns: 1fr;
    }

    .cart-item {
      grid-template-columns: 1fr;
      text-align: center;
    }

    .cart-item__media {
      justify-self: center;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    // Quantity update functionality
    const quantityBtns = document.querySelectorAll('.quantity-btn');
    const quantityInputs = document.querySelectorAll('.quantity-input');
    const removeButtons = document.querySelectorAll('.cart-item__remove');

    quantityBtns.forEach((btn) => {
      btn.addEventListener('click', function () {
        const key = this.dataset.key;
        const input = document.querySelector(`input[data-key="${key}"]`);
        const currentValue = parseInt(input.value);

        if (this.classList.contains('quantity-btn--plus')) {
          input.value = currentValue + 1;
        } else if (this.classList.contains('quantity-btn--minus') && currentValue > 0) {
          input.value = currentValue - 1;
        }

        updateCart(key, input.value);
      });
    });

    quantityInputs.forEach((input) => {
      input.addEventListener('change', function () {
        const key = this.dataset.key;
        const value = Math.max(0, parseInt(this.value) || 0);
        this.value = value;
        updateCart(key, value);
      });
    });

    removeButtons.forEach((btn) => {
      btn.addEventListener('click', function () {
        const key = this.dataset.key;
        updateCart(key, 0);
      });
    });

    function updateCart(key, quantity) {
      fetch('/cart/change.js', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          id: key,
          quantity: quantity,
        }),
      })
        .then((response) => response.json())
        .then((data) => {
          location.reload(); // Simple reload for now
        })
        .catch((error) => {
          console.error('Error:', error);
        });
    }
  });
</script>
